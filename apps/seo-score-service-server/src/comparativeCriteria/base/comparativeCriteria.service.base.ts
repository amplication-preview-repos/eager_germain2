/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ComparativeCriteria as PrismaComparativeCriteria,
  UrlAnalysis as PrismaUrlAnalysis,
} from "@prisma/client";

export class ComparativeCriteriaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ComparativeCriteriaCountArgs, "select">
  ): Promise<number> {
    return this.prisma.comparativeCriteria.count(args);
  }

  async comparativeCriteriaItems(
    args: Prisma.ComparativeCriteriaFindManyArgs
  ): Promise<PrismaComparativeCriteria[]> {
    return this.prisma.comparativeCriteria.findMany(args);
  }
  async comparativeCriteria(
    args: Prisma.ComparativeCriteriaFindUniqueArgs
  ): Promise<PrismaComparativeCriteria | null> {
    return this.prisma.comparativeCriteria.findUnique(args);
  }
  async createComparativeCriteria(
    args: Prisma.ComparativeCriteriaCreateArgs
  ): Promise<PrismaComparativeCriteria> {
    return this.prisma.comparativeCriteria.create(args);
  }
  async updateComparativeCriteria(
    args: Prisma.ComparativeCriteriaUpdateArgs
  ): Promise<PrismaComparativeCriteria> {
    return this.prisma.comparativeCriteria.update(args);
  }
  async deleteComparativeCriteria(
    args: Prisma.ComparativeCriteriaDeleteArgs
  ): Promise<PrismaComparativeCriteria> {
    return this.prisma.comparativeCriteria.delete(args);
  }

  async getUrlAnalysis(parentId: string): Promise<PrismaUrlAnalysis | null> {
    return this.prisma.comparativeCriteria
      .findUnique({
        where: { id: parentId },
      })
      .urlAnalysis();
  }
}
