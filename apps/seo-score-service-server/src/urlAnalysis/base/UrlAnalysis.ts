/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Backlinks } from "../../backlinks/base/Backlinks";

import {
  ValidateNested,
  IsOptional,
  IsNumber,
  Min,
  Max,
  IsInt,
  IsDate,
  IsString,
  IsBoolean,
  MaxLength,
} from "class-validator";

import { Type } from "class-transformer";
import { BooleanCriteria } from "../../booleanCriteria/base/BooleanCriteria";
import { ComparativeCriteria } from "../../comparativeCriteria/base/ComparativeCriteria";
import { PageSpeed } from "../../pageSpeed/base/PageSpeed";

@ObjectType()
class UrlAnalysis {
  @ApiProperty({
    required: false,
    type: () => [Backlinks],
  })
  @ValidateNested()
  @Type(() => Backlinks)
  @IsOptional()
  backlinksItems?: Array<Backlinks>;

  @ApiProperty({
    required: false,
    type: () => [BooleanCriteria],
  })
  @ValidateNested()
  @Type(() => BooleanCriteria)
  @IsOptional()
  booleanCriteriaItems?: Array<BooleanCriteria>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  booleanScore!: number | null;

  @ApiProperty({
    required: false,
    type: () => [ComparativeCriteria],
  })
  @ValidateNested()
  @Type(() => ComparativeCriteria)
  @IsOptional()
  comparativeCriteriaItems?: Array<ComparativeCriteria>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  comparativeScore!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  contentSize!: number | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  googlePosition!: number | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isTarget!: boolean | null;

  @ApiProperty({
    required: false,
    type: () => [PageSpeed],
  })
  @ValidateNested()
  @Type(() => PageSpeed)
  @IsOptional()
  pageSpeeds?: Array<PageSpeed>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  seoScore!: number | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  url!: string | null;
}

export { UrlAnalysis as UrlAnalysis };
